local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local SoundService = game:GetService("SoundService")
local RunService = game:GetService("RunService")

local lplayer = Players.LocalPlayer
local char = lplayer.Character
local rppos
local MCC = Lighting:WaitForChild("MainColorCorrection")
local hasteSpawned = false
local hasteTime = 60
local maxTime = 120
local haste
local leverSpawned = false
local latestRoom = nil 

local function UpdateTextLabel(timerLabel, time)
    local minutes = math.floor(time / 60)
    local seconds = time % 60
    timerLabel.Text = string.format("%02d:%02d", minutes, seconds)
end

local function PlayJumpscare(callback)
    local screenGui = Instance.new("ScreenGui", lplayer:WaitForChild("PlayerGui"))
    screenGui.Name = "JumpscareGui"
    
    local imageLabel = Instance.new("ImageLabel", screenGui)
    imageLabel.Size = UDim2.new(1, 0, 1, 0)
    imageLabel.Position = UDim2.new(0, 0, 0, 0)
    imageLabel.Image = "rbxassetid://16854793811"
    imageLabel.BackgroundTransparency = 1
    imageLabel.ZIndex = 10

    local screamSound = Instance.new("Sound", SoundService)
    screamSound.SoundId = "rbxassetid://8628815817"
    screamSound.Volume = 5
    screamSound:Play()
    
    local boomSound = Instance.new("Sound", SoundService)
    boomSound.SoundId = "rbxassetid://6305809364"
    boomSound.Volume = 5

    local oldpos = imageLabel.Position

    local function TremorEffect()
        RunService.RenderStepped:Connect(function()
            imageLabel.Position = oldpos + UDim2.new(0, math.random(-10, 10), 0, math.random(-10, 10))
        end)
    end
    TremorEffect()
    task.spawn(function()
        wait(0.7)
        boomSound:Play()
        wait(0.1)
        screamSound:Stop()
        wait(0.5)
        screenGui:Destroy()
        screamSound:Destroy()
        boomSound:Destroy()

        if callback then
            callback()
        end
    end)
end

local function HasteAttack()
    char:SetAttribute("Stunned", true)

    firesignal(ReplicatedStorage.RemotesFolder.DeathHint.OnClientEvent, 
        {"You died to who you call Haste", 
         "He will appear after the time is over.", 
         "Don't Hide when this happens it will not work, So the best thing to do is find a lever!"}, "Yellow")
    
    PlayJumpscare(function()
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.Health = 0
        end
    end)
end

local function DeleteHaste()
    if hasteSpawned and haste then
        haste:Destroy()
        hasteSpawned = false
    end
end

local function HasteChaseInit()
    local object = MP
    local player = Players.LocalPlayer
    local speed = 75
    local chase = true
    while chase do
        local playerPos = player.Character.HumanoidRootPart.Position
        local objectPos = object.Position
        local direction = (playerPos - objectPos).Unit
        local distance = (playerPos - objectPos).Magnitude
        
        if distance > 0.5 then
            object.CFrame = object.CFrame + direction * speed * math.min(distance, 1/60)
        else
            chase = false
            HasteAttack()
        end
        task.wait()
    end
end

local function SpawnHaste()
    if hasteSpawned then return end
    hasteSpawned = true
    MCC.TintColor = Color3.new(1, 0.5, 0.5)
    rppos = char.HumanoidRootPart.Position
    haste = game:GetObjects("rbxassetid://111998108199298")[1]
    local MP = haste
    haste.Parent = workspace
    haste.Name = "HasteMoving"
    haste.Position = rppos + Vector3.new(900, 0, 600)
    haste.CanCollide = false
    haste.Anchored = false

    local main = haste:FindFirstChild("Main")
    if main then
        local footstepsSound = main:FindFirstChild("Footsteps")
        if footstepsSound then
            footstepsSound.Looped = true
            footstepsSound.PlaybackSpeed = 0.5
            footstepsSound.Volume = 2
            footstepsSound:Play()
        end
        
        local chaseSound = main:FindFirstChild("ChaseSound")
        if chaseSound then
            chaseSound.Looped = true
            chaseSound.PlaybackSpeed = 0.6
            chaseSound.Volume = 6.5
            chaseSound:Play()
        end
    else
        warn("Main not found in Haste model.")
    end
    task.spawn(HasteChaseInit)
end

local function SpawnLeverNearDoor(door)
    if leverSpawned then return end
    local asset = game:GetObjects("rbxassetid://17271863184")[1]
    asset.Parent = workspace
    local lever = asset:FindFirstChild("Lever")
    if lever then
        local doorPivot = door:GetPivot()
        local offset = CFrame.new(3, 0, 0)
        local leverPosition = doorPivot * offset
        lever:PivotTo(leverPosition)
        leverSpawned = true
        TimerTick(lever)
    else
        warn("Lever not found in the asset.")
    end
end

local function TrySpawnLeverBasedOnTime(door)
    local chance = math.clamp(1 - (hasteTime / maxTime), 0, 1)
    if math.random() <= chance then
        SpawnLeverNearDoor(door)
    end
end

local function TimerTick(lever)
    local displayTimer = lever:FindFirstChild("DisplayTimer")
    local timerBeep = lever:FindFirstChild("DisplayPlate"):FindFirstChild("TimerBeep")
    local activatePrompt = lever:FindFirstChild("ActivateEventPrompt")
    local takeTimerLabel = lever:FindFirstChild("TakeTimer"):FindFirstChild("TextLabel")
    local displayTimerLabel = displayTimer:FindFirstChild("TextLabel")

    RunService.RenderStepped:Connect(function()
        if hasteTime > 0 then
            hasteTime = hasteTime - 1
            UpdateTextLabel(displayTimerLabel, hasteTime)
            if timerBeep then
                timerBeep:Play()
            end
            if hasteTime == 0 then
                SpawnHaste()
            elseif hasteSpawned and hasteTime > 0 then
                DeleteHaste()
            end
        else
            if activatePrompt and activatePrompt.Enabled then
                activatePrompt.Triggered:Connect(function()
                    local addTime = tonumber(takeTimerLabel.Text) or 0
                    hasteTime = math.min(hasteTime + addTime, maxTime)
                    UpdateTextLabel(displayTimerLabel, hasteTime)
                    activatePrompt.Enabled = false
                    activatePrompt:Destroy()
                end)
            end
        end
        wait(1)
    end)
end

local function ScriptStart()
    local currentRoomValue = ReplicatedStorage.GameData.LatestRoom.Value
    local latestRoomInstance = workspace.CurrentRooms:FindFirstChild(currentRoomValue)
    if latestRoomInstance then
        if currentRoomValue ~= latestRoom then
            latestRoom = currentRoomValue
            leverSpawned = false 
            local door = latestRoomInstance:FindFirstChild("Door")
            if door then
                TrySpawnLeverBasedOnTime(door)
            else
                warn("Door not found in the latest room.")
            end
        end
    else
        warn("Latest room instance not found in CurrentRooms.")
    end

RunService.RenderStepped:Connect(ScriptStart)
