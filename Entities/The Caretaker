local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local GameData = ReplicatedStorage:WaitForChild("GameData")
local LatestRoom = GameData:WaitForChild("LatestRoom")

local IsCaptured = false
local CapturedPlayerData = nil
local KillDistance = 7

local CaretakerImage = "rbxassetid://107332625713352"
local function updatePainting(painting, player)
    local canvas = painting:FindFirstChild("Canvas")
    if canvas and canvas:FindFirstChildOfClass("SurfaceGui") then
        local imageLabel = canvas:FindFirstChildOfClass("SurfaceGui"):FindFirstChildOfClass("ImageLabel")
        if imageLabel then
            if player then
                imageLabel.Image = "rbxthumb://type=Avatar&id=" .. player.UserId .. "&w=420&h=420"
            else
                imageLabel.Image = CaretakerImage
            end
        end
        local title = painting:FindFirstChild("Title")
        if title then
            if player then
                title.Text = "This painting is titled \"" .. player.DisplayName .. "\""
            else
                title.Text = "This painting is titled \"The Caretaker\""
            end
        end
    end
end

local function monitorPaintings()
    LatestRoom.Changed:Connect(function()
        if math.random(1, 10) == 1 then
            local currentRoom = Workspace.CurrentRooms:FindFirstChild(LatestRoom.Value)
            if currentRoom and currentRoom:FindFirstChild("Assets") then
                for _, painting in pairs(currentRoom.Assets:GetChildren()) do
                    if painting.Name:find("Painting") then
                        updatePainting(painting, nil)
                        task.spawn(function()
                            while painting:IsDescendantOf(Workspace) and not IsCaptured do
                                local localPlayer = Players.LocalPlayer
                                local character = localPlayer.Character
                                local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
                                if humanoidRootPart and (painting.Position - humanoidRootPart.Position).Magnitude <= KillDistance then
                                    IsCaptured = true
                                    CapturedPlayerData = localPlayer
                                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                                    if humanoid then
                                        humanoid.Health = 0
					firesignal(game.ReplicatedStorage.RemotesFolder.DeathHint.OnClientEvent, {"You've died to who you call The Caretaker.","This is a tricky one","Try to stay away from a strange painting."},"Blue")
		                        game:GetService("ReplicatedStorage").GameStats["Player_".. game.Players.LocalPlayer.Name].Total.DeathCause.Value = "The Caretaker"
                                    end
                                    updatePainting(painting, localPlayer)
                                    humanoidRootPart.CFrame = painting.CFrame
                                    humanoidRootPart.Anchored = true
                                    for i = 1, 5 do
                                        humanoidRootPart.CFrame = humanoidRootPart.CFrame:Lerp(painting.CFrame, 0.2)
                                        task.wait(0.1)
                                    end
                                    humanoidRootPart.Anchored = false
                                end
                                task.wait(0.1)
                            end
                        end)
                    end
                end
            end
        end
    end)
end
monitorPaintings()
